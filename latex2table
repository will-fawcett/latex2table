#!/usr/bin/env bash

echo "Welcome to latex2table v1.0"

# Directory the script was called from
curr_dir=`pwd`

# Full path to the file 
full_path="$(cd "$(dirname "$1")"; pwd)/$(basename "$1")"
echo "Will process file:" $full_path

# The directory this script is stored in (including resolving symlinks):
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
L2T_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"



## Move to the install directory 
cd $L2T_DIR


# --interaction=batchmode by default, could add an option to make this verbose 
#echo pdflatex --interaction=batchmode "\def\tablefile{$full_path} \input{$L2T_DIR/make_table.tex}"
pdflatex --interaction=batchmode "\def\tablefile{$full_path} \input{$L2T_DIR/make_table.tex}"  | grep -v "This is pdfTeX" | grep -v "write18 enabled." | grep -v "entering extended mode"
pdflatex --interaction=batchmode "\def\tablefile{$full_path} \input{$L2T_DIR/make_table.tex}"  | grep -v "This is pdfTeX" | grep -v "write18 enabled." | grep -v "entering extended mode"

# Crop the table so it's a nice shape 
pdfcrop make_table.pdf | grep -v Heiko | grep -v make_table-crop.pdf 
mv make_table-crop.pdf make_table.pdf

# Move the output so it's stored where the used called the script from 
output=$curr_dir/${1%.tex}.pdf
echo "Writing output to $output"
mv make_table.pdf $output 


#convert -density 300 make_table.pdf -quality 100 make_table.png
#mv make_table.png $curr_dir/${1%.tex}.png
